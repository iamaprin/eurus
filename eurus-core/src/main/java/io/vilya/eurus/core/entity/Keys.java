/*
 * This file is generated by jOOQ.
*/
package io.vilya.eurus.core.entity;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import io.vilya.eurus.core.entity.tables.Account;
import io.vilya.eurus.core.entity.tables.AccountRMember;
import io.vilya.eurus.core.entity.tables.AccountRRole;
import io.vilya.eurus.core.entity.tables.Member;
import io.vilya.eurus.core.entity.tables.Perm;
import io.vilya.eurus.core.entity.tables.PermRRole;
import io.vilya.eurus.core.entity.tables.Role;
import io.vilya.eurus.core.entity.tables.records.AccountRMemberRecord;
import io.vilya.eurus.core.entity.tables.records.AccountRRoleRecord;
import io.vilya.eurus.core.entity.tables.records.AccountRecord;
import io.vilya.eurus.core.entity.tables.records.MemberRecord;
import io.vilya.eurus.core.entity.tables.records.PermRRoleRecord;
import io.vilya.eurus.core.entity.tables.records.PermRecord;
import io.vilya.eurus.core.entity.tables.records.RoleRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>DB_VY_CORE</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<AccountRMemberRecord, Integer> IDENTITY_ACCOUNT_R_MEMBER = Identities0.IDENTITY_ACCOUNT_R_MEMBER;
    public static final Identity<MemberRecord, Integer> IDENTITY_MEMBER = Identities0.IDENTITY_MEMBER;
    public static final Identity<PermRecord, Integer> IDENTITY_PERM = Identities0.IDENTITY_PERM;
    public static final Identity<PermRRoleRecord, Integer> IDENTITY_PERM_R_ROLE = Identities0.IDENTITY_PERM_R_ROLE;
    public static final Identity<RoleRecord, Integer> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRMemberRecord> KEY_ACCOUNT_R_MEMBER_PRIMARY = UniqueKeys0.KEY_ACCOUNT_R_MEMBER_PRIMARY;
    public static final UniqueKey<AccountRRoleRecord> KEY_ACCOUNT_R_ROLE_PRIMARY = UniqueKeys0.KEY_ACCOUNT_R_ROLE_PRIMARY;
    public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = UniqueKeys0.KEY_MEMBER_PRIMARY;
    public static final UniqueKey<PermRecord> KEY_PERM_PRIMARY = UniqueKeys0.KEY_PERM_PRIMARY;
    public static final UniqueKey<PermRRoleRecord> KEY_PERM_R_ROLE_PRIMARY = UniqueKeys0.KEY_PERM_R_ROLE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<AccountRMemberRecord, Integer> IDENTITY_ACCOUNT_R_MEMBER = createIdentity(AccountRMember.ACCOUNT_R_MEMBER, AccountRMember.ACCOUNT_R_MEMBER.ID);
        public static Identity<MemberRecord, Integer> IDENTITY_MEMBER = createIdentity(Member.MEMBER, Member.MEMBER.ID);
        public static Identity<PermRecord, Integer> IDENTITY_PERM = createIdentity(Perm.PERM, Perm.PERM.ID);
        public static Identity<PermRRoleRecord, Integer> IDENTITY_PERM_R_ROLE = createIdentity(PermRRole.PERM_R_ROLE, PermRRole.PERM_R_ROLE.ID);
        public static Identity<RoleRecord, Integer> IDENTITY_ROLE = createIdentity(Role.ROLE, Role.ROLE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRMemberRecord> KEY_ACCOUNT_R_MEMBER_PRIMARY = createUniqueKey(AccountRMember.ACCOUNT_R_MEMBER, "KEY_account_r_member_PRIMARY", AccountRMember.ACCOUNT_R_MEMBER.ID);
        public static final UniqueKey<AccountRRoleRecord> KEY_ACCOUNT_R_ROLE_PRIMARY = createUniqueKey(AccountRRole.ACCOUNT_R_ROLE, "KEY_account_r_role_PRIMARY", AccountRRole.ACCOUNT_R_ROLE.ID);
        public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = createUniqueKey(Member.MEMBER, "KEY_member_PRIMARY", Member.MEMBER.ID);
        public static final UniqueKey<PermRecord> KEY_PERM_PRIMARY = createUniqueKey(Perm.PERM, "KEY_perm_PRIMARY", Perm.PERM.ID);
        public static final UniqueKey<PermRRoleRecord> KEY_PERM_R_ROLE_PRIMARY = createUniqueKey(PermRRole.PERM_R_ROLE, "KEY_perm_r_role_PRIMARY", PermRRole.PERM_R_ROLE.ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ID);
    }
}
