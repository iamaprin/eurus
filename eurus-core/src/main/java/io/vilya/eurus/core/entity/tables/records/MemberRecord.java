/*
 * This file is generated by jOOQ.
*/
package io.vilya.eurus.core.entity.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import io.vilya.eurus.core.entity.tables.Member;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> implements Record8<Integer, String, Byte, Date, String, Date, Date, Boolean> {

    private static final long serialVersionUID = 722852106;

    /**
     * Setter for <code>DB_VY_CORE.member.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.mem_name</code>.
     */
    public void setMemName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.mem_name</code>.
     */
    public String getMemName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.mem_sex</code>.
     */
    public void setMemSex(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.mem_sex</code>.
     */
    public Byte getMemSex() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.mem_birth</code>.
     */
    public void setMemBirth(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.mem_birth</code>.
     */
    public Date getMemBirth() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.mem_mobile</code>.
     */
    public void setMemMobile(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.mem_mobile</code>.
     */
    public String getMemMobile() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.create_time</code>.
     */
    public void setCreateTime(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.create_time</code>.
     */
    public Date getCreateTime() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.update_time</code>.
     */
    public void setUpdateTime(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.update_time</code>.
     */
    public Date getUpdateTime() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>DB_VY_CORE.member.is_deleted</code>.
     */
    public void setIsDeleted(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>DB_VY_CORE.member.is_deleted</code>.
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Byte, Date, String, Date, Date, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Byte, Date, String, Date, Date, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Member.MEMBER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Member.MEMBER.MEM_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Member.MEMBER.MEM_SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Member.MEMBER.MEM_BIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Member.MEMBER.MEM_MOBILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Member.MEMBER.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Member.MEMBER.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return Member.MEMBER.IS_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMemName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getMemSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getMemBirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMemMobile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value2(String value) {
        setMemName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value3(Byte value) {
        setMemSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value4(Date value) {
        setMemBirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value5(String value) {
        setMemMobile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value6(Date value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value7(Date value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value8(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord values(Integer value1, String value2, Byte value3, Date value4, String value5, Date value6, Date value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(Integer id, String memName, Byte memSex, Date memBirth, String memMobile, Date createTime, Date updateTime, Boolean isDeleted) {
        super(Member.MEMBER);

        set(0, id);
        set(1, memName);
        set(2, memSex);
        set(3, memBirth);
        set(4, memMobile);
        set(5, createTime);
        set(6, updateTime);
        set(7, isDeleted);
    }
}
